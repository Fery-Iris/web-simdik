generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Agenda {
  id               String   @id @default(cuid()) @map("id_agendas")
  title            String   @db.VarChar(255)
  slug             String   @unique @db.VarChar(255)
  description      String   @db.Text
  date             DateTime @db.Date
  time             String   @db.VarChar(10)
  location         String   @db.VarChar(255)
  address          String?  // TAMBAHKAN: Untuk alamat lengkap di bawah lokasi
  organizer        String   @default("Dinas Pendidikan Kota Banjarmasin") @db.VarChar(255)
  capacity         Int      @default(0)
  category         String   @default("Lainnya") @db.VarChar(50) // TAMBAHKAN: e.g., Workshop, Seminar
  registrationFee  String   @default("Gratis") @db.VarChar(100) // TAMBAHKAN: e.g., Gratis, Rp 150.000
  contactPerson    String?  // TAMBAHKAN: e.g., disdik@banjarmasinkota.go.id
  imageUrl         String?
  status           Status   @default(SCHEDULED)
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")

  @@map("agendas")
}

model Layanan {
  id          BigInt      @id @default(autoincrement()) @map("id_layanans")
  name        String      @db.VarChar(255)
  description String?     @db.Text
  icon        String?     @db.VarChar(100)
  color       String?     @db.VarChar(50)
  isActive    Boolean     @default(true) @map("isActive")
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")
  
  reservations Reservasi[]

  @@map("layanans")
}

model Reservasi {
  id                String            @id @default(cuid()) @map("id_reservations")
  queueNumber       String            @unique @db.VarChar(20)
  service           String            @db.VarChar(255) // Kept for backward compatibility
  idLayanan         BigInt?           @map("id_layanans") // Foreign key to Layanan
  name              String            @db.VarChar(255)
  phone             String            @db.VarChar(20)
  nik               String?           @db.VarChar(20)
  purpose           String            @db.Text
  date              DateTime          @db.Date
  timeSlot          String            @db.VarChar(255)
  status            ReservationStatus @default(WAITING)
  estimatedCallTime String?           @db.VarChar(255)
  createdAt         DateTime          @default(now()) @map("created_at")
  updatedAt         DateTime          @updatedAt @map("updated_at")

  layanan Layanan? @relation(fields: [idLayanan], references: [id], onDelete: SetNull)

  @@map("reservations")
}

enum Status {
  SCHEDULED @map("Terjadwal")
  ONGOING   @map("Berlangsung")
  COMPLETED @map("Selesai")
  CANCELLED @map("Dibatalkan")
}

enum ReservationStatus {
  WAITING   @map("Menunggu")
  CALLED    @map("Dipanggil")
  COMPLETED @map("Selesai")
  CANCELLED @map("Dibatalkan")
}

model Pengguna {
  id        BigInt   @id @default(autoincrement()) @map("id_penggunas")
  nama      String   @db.VarChar(100)
  email     String   @unique @db.VarChar(150)
  passwordHash String @map("password_hash") @db.VarChar(255)
  peran     RoleType @default(ADMIN)
  createdAt DateTime @default(now()) @map("dibuat_pada")
  updatedAt DateTime @updatedAt @map("diperbarui_pada")

  @@map("penggunas")
}

enum RoleType {
  ADMIN
  USER
}
